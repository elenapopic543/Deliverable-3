#Starting with cleaning the memory:
rm(list = ls())
#Providing the link to the dataset:
link="https://github.com/elenapopic543/Deliverable-3/raw/main/GovEffectivenessData.csv"
#Reading-in the dataset:
df=read.csv(link, stringsAsFactors = F)
#Checking the column names:
names(df)
#Formatting numeric data;
df$CC.EST <- as.numeric(df$CC.EST)
df$GE.EST <- as.numeric(df$GE.EST)
df$RL.EST <- as.numeric(df$RL.EST)
#Dropping missing data:
df = na.omit(df)
#Exploring the range of data:
#boxplot(df[,c('CC.EST','GE.EST','RL.EST')])
#Note: The values of all three variables are in the same range.
set.seed(123)
#Computing the distance matrix"
cols = c("CC.EST", "GE.EST", "RL.EST")
data = df[, cols]
distMatrix <- cluster::daisy(data)
#Based on the calculated distances, determining the clusters:
res.pam=cluster::pam(x=distMatrix,
k = 3,
cluster.only = F)
#Saving the information on clusters as a factor/categorical variable to the original dataframe:
df$cluster=as.factor(res.pam$clustering)
#Exploring ordering patterns:
theVars = c("CC.EST", "GE.EST", "RL.EST", "cluster")
aggregate(.~cluster,
data=df[,theVars],
FUN=median)
#Generating labels based on the detected ordering pattern:
df$cluster=factor(df$cluster,
labels=c("Low","Mid","High"),
ordered=T)
#Providing the link to the geo.json map:
linkMap="https://github.com/elenapopic543/Deliverable-3/raw/main/custom.geo.json2"
#Loading the required package to work with the geo.json objects:
library(sf)
#Reading-in the geojson map:
map = read_sf(linkMap)
#Providing the link to the geo.json map:
linkMap="https://github.com/elenapopic543/Deliverable-3/raw/main/custom.geo2.json"
#Loading the required package to work with the geo.json objects:
library(sf)
#Reading-in the geojson map:
map = read_sf(linkMap)
#head(map)
library(dplyr)
#Renaming the sov_a3 column to facilitate the merging:
names(map)[5] <- "ISO3"
#Merging the map with the data in the original country-level dataset:
mapWorld=merge(map,
df,
by='ISO3')
#Creating the base map:
library(ggplot2)
baseMap= ggplot(data=map) + theme_classic() +
geom_sf(fill='grey',
color=NA)
#baseMap
#Adding the data-layer from the merged dataset:
numericMap = baseMap + geom_sf(data=mapWorld,
aes(fill=CC.EST),
color=NA)
#numericMap
#Adding the clustering information to the map:
categoricalMap= baseMap + geom_sf(data=mapWorld,
aes(fill=cluster),
color=NA)
#categoricalMap
library(RColorBrewer)
#Customizing the map:
Legend_labels=c('1_low','2_mid','3_high')
Legend_title="Country Effective Governance Indicators\n(grey is missing)"
categoricalMap + scale_fill_brewer(palette ='Oranges', #using a sequential palette
direction = -1,
labels=Legend_labels,
name=Legend_title) +
theme(legend.title = element_text(size = 8)) +
labs(title = "Comparative View on Government Effectiveness",
title.size = 11,
title.position = "plot",
caption = "Source: World Bank Open Data") +
theme(plot.title = element_text(margin = margin(b = 20))) +
theme(plot.caption = element_text(hjust = 0))
